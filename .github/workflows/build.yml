name: build

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'master'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt
          requirements-dev.txt
    - run: pip install -r requirements-dev.txt
    - run: python3 -m pytest --junitxml=test-report.xml
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: Test Results
        path: |
          test-report.xml

  docker:
    runs-on: ubuntu-latest

    env:
      have_secrets: ${{ secrets.DOCKERHUB_USERNAME != '' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          danielschenk/zpf-backstage-tv
        # generate Docker tags based on the following events/attributes
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      if: ${{ env.have_secrets == 'true' }}
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Determine version string
      run: echo "VERSION=$(git describe --always --match 'v*' --dirty)" >> $GITHUB_ENV

    - name: Build and push Docker images
      uses: docker/build-push-action@v3
      if: ${{ env.have_secrets == 'true' }}
      with:
        context: .
        build-args: |
          VERSION=${{ env.VERSION }}
        platforms: linux/386,linux/amd64,linux/arm64,linux/arm/v7
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=danielschenk/zpf-backstage-tv:buildcache
        cache-to: type=registry,ref=danielschenk/zpf-backstage-tv:buildcache,mode=max

    - name: Build and push Docker images (no push)
      uses: docker/build-push-action@v3
      if: ${{ env.have_secrets != 'true' }}
      with:
        context: .
        build-args: |
          VERSION=${{ env.VERSION }}
        platforms: linux/386,linux/amd64,linux/arm64,linux/arm/v7
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=danielschenk/zpf-backstage-tv:buildcache

    - name: Update repo description
      uses: peter-evans/dockerhub-description@v3
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: danielschenk/zpf-backstage-tv

  # needed by test results workflow
  event_file:
    name: "Event File"
    runs-on: ubuntu-latest
    steps:
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: Event File
        path: ${{ github.event_path }}
